version: "3.8"

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: ${NAMESPACE}-n8n
    restart: always
    environment:
      - N8N_HOST=${N8N_HOST:-localhost}
      - NODE_ENV=production
      - WEBHOOK_URL=https://${N8N_DOMAIN:-n8n.example.com}/
      - N8N_PROTOCOL=https
      - N8N_PORT=5678
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-password}
      - N8N_AUTH_JWT_SECRET=${JWT_SECRET:-changeme-with-a-secure-random-string}
      - N8N_AUTH_ACTIVE=true
      - N8N_AUTH_JWT_REFRESH_TOKEN_EXPIRES_IN=7d
      - N8N_AUTH_JWT_TOKEN_EXPIRES_IN=1d
      - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY:-changeme-with-a-secure-random-string}
      - N8N_LOG_LEVEL=warn
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - GENERIC_TIMEZONE=UTC
    volumes:
      - ./data/n8n:/home/node/.n8n
    networks:
      - n8n-network
      - web
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:15-alpine
    container_name: ${NAMESPACE}-postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - n8n-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-n8n} -d ${POSTGRES_DB:-n8n}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  web:
    external: true
  n8n-network:
    driver: bridge
